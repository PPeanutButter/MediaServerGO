# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Distribution

on:  
  push:
    tags:
      - '*'

jobs:

  Linux_Build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        PLATFORMS: [amd64, arm64]
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
        cache: true
        cache-dependency-path: go.sum

    - name: Build_Binary
      run: |
        CGO_ENABLED=0 GOOS=linux GOARCH=${{ matrix.PLATFORMS }} go build -o server-linux-${{ matrix.PLATFORMS }} -ldflags '-s -w --extldflags "-static -fpic"' ./src/
    - name: Pack
      run: 
        tar -czvf server-linux-${{ matrix.PLATFORMS }}.tar.gz server-linux-${{ matrix.PLATFORMS }} config.json version.txt README.md
        
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: server-linux-${{ matrix.PLATFORMS }}
        path: server-linux-${{ matrix.PLATFORMS }}.tar.gz

  Windows_Build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        PLATFORMS: [amd64, arm64]
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18
        cache: true
        cache-dependency-path: go.sum

    - name: Build_Binary
      run: |
        CGO_ENABLED=0 GOOS=windows GOARCH=${{ matrix.PLATFORMS }} go build -o server-windows-${{ matrix.PLATFORMS }}.exe -ldflags '-s -w --extldflags "-static -fpic"' ./src/
    - name: Pack
      run: 
        tar -czvf server-windows-${{ matrix.PLATFORMS }}.tar.gz server-windows-${{ matrix.PLATFORMS }}.exe config.json version.txt README.md
        
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: server-windows-${{ matrix.PLATFORMS }}
        path: server-windows-${{ matrix.PLATFORMS }}.tar.gz
